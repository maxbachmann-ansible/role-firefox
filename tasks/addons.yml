---
- name: create directories needed for addons
  file:
    state: directory
    path: "{{ item }}"
    recurse: yes
  with_items:
    - "{{ profile_path }}/extensions"
    - "{{ profile_path }}/browser-extension-data"

- name: copy profiles.ini
  template:
    src: templates/profiles.ini.j2
    dest: "{{ firefox_path }}/profiles.ini"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0644

- name: download addons
  get_url:
    url: "{{ addon_download }}/{{ item.name }}/addon-{{ item.name }}-latest.xpi"
    dest: "{{ profile_path }}/extensions/{{ item.directory }}.xpi"
  with_items: "{{ addon_list }}"
  retries: 5
  delay: 2
  register: addon_result
  until: addon_result is succeeded

- name: create config directories
  file:
    state: directory
    path: "{{ profile_path }}/browser-extension-data/{{ item.directory }}"
  when: filename is string
  vars:
    filename: "{{ lookup('first_found', dict(files=[item.directory], paths=['files'], skip=true)) }}"
  with_items: "{{ addon_list }}"

- name: Copy config
  copy:
    src: "files/{{ item.directory }}/storage.js"
    dest: "{{ profile_path }}/browser-extension-data/{{ item.directory }}/storage.js"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: 0644
  when: filename is string
  vars:
    filename: "{{ lookup('first_found', dict(files=['files/' + item.directory + '/storage.js'], skip=true)) }}"
  with_items: "{{ addon_list }}"
